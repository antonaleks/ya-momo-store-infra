stages:
  - release
  - deploy-staging
  - deploy-production

variables:
  VERSION: 0.1.${CI_PIPELINE_ID}

include:
  - local: /template.gitlab-ci.yml


upload-helm:
  stage: release
  image: lwolf/helm-kubectl-docker:v1.21.1-v3.6.0
  before_script:
    - mkdir -p $HOME/.kube
    - echo -n $KUBE_CONFIG | base64 -d > $HOME/.kube/config
    - echo -n $KUBE_CA | base64 -d > $HOME/.kube/ca.pem
    - apk --no-cache add curl
  script:
    - cd kubernetes
    - helm package --version $VERSION ./momo-store
    - curl -u "${NEXUS_REPO_USER}:$(echo $NEXUS_REPO_PASS | base64 -d)" ${NEXUS_REPO_HELM_URL} --upload-file momo-store-${VERSION}.tgz
  after_script:
    - rm $HOME/.kube/config

deploy-helm-production:
  stage: deploy-production
  rules:
    - if: ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH)
      when: manual
    - when: never
  extends: .deploy-helm
  variables:
    MOMO_STORE_URL: $MOMO_STORE_URL_PRODUCTION
    ENVIRONMENT_TYPE: production
  environment:
    name: momo-production
    url: https://$MOMO_STORE_URL_PRODUCTION

deploy-helm-staging:
  stage: deploy-staging
  extends: .deploy-helm
  variables:
    MOMO_STORE_URL: $MOMO_STORE_URL_STAGING
    ENVIRONMENT_TYPE: staging
  environment:
    name: momo-staging
    url: https://$MOMO_STORE_URL_STAGING


.deploy-argocd:
  stage: deploy
  image: argoproj/argocd:v2.3.3
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: manual
    - when: on_success
  environment:
    name: dev-helm
    url: https://$SAUSAGE_STORE_URL
  script:
    - >
      argocd --grpc-web --auth-token $ARGO_TOKEN \
            --server $ARGO_SERVER app set $ARGO_APP --revision $VERSION \
            -p environment=test \
            -p frontend.fqdn=${SAUSAGE_STORE_URL} \
            -p secrets.vaultToken=${VAULT_TOKEN}\
            -p secrets.vaultHost=${VAULT_HOST} \
            -p secrets.postgresHost=${PSQL_HOST}\
            -p secrets.postgresPort=${PSQL_PORT}\
            -p secrets.postgresDBName=${PSQL_DBNAME}\
            -p secrets.dockerConfigJson=${DOCKER_CONFIG_JSON} \
            -p backend.image.tag=${BACKEND_DOCKER_TAG} \
            -p frontend.image.tag=${FRONTEND_DOCKER_TAG} \
            -p backend-report.image.tag=${BACKEND_REPORT_DOCKER_TAG}
