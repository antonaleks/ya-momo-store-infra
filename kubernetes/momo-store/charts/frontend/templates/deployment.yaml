apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Chart.Name }}-{{ .Release.Name }}"
  namespace: "{{ .Release.Namespace }}"
  labels:
    {{- include "momo-store.labels" . | nindent 4 }}
spec:
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  replicas: {{ .Values.replicas }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: "{{ .Values.name }}"
  template:
    metadata:
      annotations:
        prometheus.io/path: "{{ .Values.monitor.endpoint }}"
        prometheus.io/port: "{{ .Values.monitor.port }}"
        prometheus.io/scrape: "{{ .Values.monitor.scrape }}"
      labels:
        app: "{{ .Values.name }}"
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: environment.type
                    operator: In
                    values:
                      - {{ .Values.global.environment }}
      containers:
        - image: {{ .Values.global.imageRegistry }}/{{ .Values.image.name }}:{{ .Values.image.tag | default .Chart.AppVersion }}
          name: "{{ .Values.name }}"
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              memory: {{ .Values.resources.requests.memory }}
              cpu: {{ .Values.resources.requests.cpu }}
            limits:
              memory: {{ .Values.resources.limits.memory }}
              cpu: {{ .Values.resources.limits.cpu }}
          ports:
            - name: frontend
              containerPort: {{ .Values.port }}
          volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: nginx.conf
              readOnly: true
      volumes:
        - name: nginx-conf
          configMap:
            name: nginx-conf-{{ .Release.Name }}
            items:
              - key: nginx.conf
                path: nginx.conf
      imagePullSecrets:
        - name: docker-config-secret-helm
